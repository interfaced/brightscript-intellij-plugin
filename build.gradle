buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "it.unimi.dsi:fastutil:8.5.9"
    }
}

plugins {
    id "org.jetbrains.intellij" version "1.9.0"
    id "org.jetbrains.grammarkit" version "2021.1.3"
}

group 'com.interfaced'
version '0.2.7'

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'

sourceSets {
    all {
        java.srcDirs += ['src/main/gen']
        kotlin.srcDirs += ['src/main/kotlin']
        resources.srcDirs = ['src/main/resources']
    }
}

sourceCompatibility = 1.8

grammarKit {
    jflexRelease = "1.7.0-1"
    grammarKitRelease = "2021.1.2"
//    intellijRelease = "203.7717.81"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.72'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
}

intellij {
    version.set("2021.3")
    type.set("IC") // Target IDE Platform

//    plugins.set(listOf(/* Plugin Dependencies */))
}

patchPluginXml {
}


import org.jetbrains.grammarkit.tasks.*

def GENERATE_GROUP = 'Generate'

task generateLexer(type: GenerateLexer) {
    source = "src/main/grammar/BrightScript.flex"
    targetDir = "src/main/gen/com/interfaced/brs/lang/lexer"
    targetClass = "_BrsLexer"
    skeleton = "src/main/grammar/idea-flex.skeleton"
    purgeOldFiles = true

    description = 'Generate Lexer Java sources for BrightScript'
    group = GENERATE_GROUP
}

task generateParser(type: GenerateParser) {
    source = "src/main/grammar/BrightScript.bnf"
    targetRoot = 'src/main/gen'
    pathToParser = 'src/main/gen/com/interfaced/brs/lang/BrsParser.java'
    pathToPsiRoot = 'src/main/gen/com/interfaced/brs/lang/psi'
    purgeOldFiles = true

    description = 'Generate Parser Java sources for BrightScript'
    group = GENERATE_GROUP

//     patch up to date check
    outputs.upToDateWhen { false }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileKotlin.dependsOn(generateLexer, generateParser)
